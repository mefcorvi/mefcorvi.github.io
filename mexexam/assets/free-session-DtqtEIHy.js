import{p as x,q as C,h as R,G as E,H as M,D as O,I as P,v as k,x as f,m as w,J as W}from"./index-DmTd4wsr.js";import{u as _}from"./questions-But1FFGG.js";const A=new WeakMap;function H(t,s,l={}){const{mode:d="replace",route:r=x(),router:i=C(),transform:u=p=>p}=l;A.has(i)||A.set(i,new Map);const o=A.get(i);let c=r.params[t];P(()=>{c=void 0});let a;const e=E((p,m)=>(a=m,{get(){return p(),u(c!==void 0&&c!==""?c:M(s))},set(v){c!==v&&(c=v===s||v===null?void 0:v,o.set(t,v===s||v===null?void 0:v),m(),O(()=>{if(o.size===0)return;const h=Object.fromEntries(o.entries());o.clear();const{params:g,query:z,hash:Q}=r;i[M(d)]({params:{...g,...h},query:z,hash:Q})}))}}));return R(()=>r.params[t],p=>{c=p,a()},{flush:"sync"}),e}const J=k(()=>{const t=f(new Map),s=f(new Map),{questions:l,loadAll:d,loadSection:r,reset:i}=_(),u=w(()=>{const n=new Map;for(const y of l.values())y.type==="choice"&&n.set(y.id,y);return n}),o=f(),c=W({id:-1,value:"I don't know",isAnswer:!1}),a=()=>{let n=o.value;for(;n===o.value&&u.value.size>1;)if(n=b(u.value,t.value,s.value),!n)return n;return n},e=w(()=>{if(!o.value)return null;const n=l.get(o.value);return n||null}),p=f([]),m=()=>{var n;p.value=[...(((n=e.value)==null?void 0:n.options)??[]).sort(()=>Math.random()-.5),c]},v=f(),h=f(!1),g=n=>{o.value=n},z=n=>l.has(n),Q=n=>{if(e.value&&e.value.type==="choice"){if(!p.value.includes(n))throw new Error("Current question does not have the selected option");v.value=n}},q=()=>{v.value&&e.value&&(v.value.isAnswer?(t.value.set(e.value.id,(t.value.get(e.value.id)??0)+1),s.value.set(e.value.id,(s.value.get(e.value.id)??0)-1),(s.value.get(e.value.id)??0)<=0&&s.value.delete(e.value.id)):(s.value.set(e.value.id,(s.value.get(e.value.id)??0)+1),t.value.set(e.value.id,(t.value.get(e.value.id)??0)-1),(t.value.get(e.value.id)??0)<=0&&t.value.delete(e.value.id)))},S=()=>{e.value&&e.value.type==="text"&&(h.value=!0)};R(()=>{var n;return(n=e.value)==null?void 0:n.id},()=>{v.value=void 0,h.value=!1,m()},{immediate:!0,flush:"sync"});const I=w(()=>({correctQuestions:t.value.size,wrongQuestions:s.value.size,unansweredQuestions:u.value.size-t.value.size-s.value.size,totalQuestions:u.value.size,correctPercentage:t.value.size/u.value.size*100,wrongPercentage:s.value.size/u.value.size*100,unansweredPercentage:(u.value.size-t.value.size-s.value.size)/u.value.size*100}));return{startAll:async()=>{await d(),t.value.clear(),s.value.clear()},startSection:async n=>{i(),await r(n),t.value.clear(),s.value.clear()},stat:I,correctCount:w(()=>t.value),correctQuestions:t,wrongQuestions:s,currentOptionsRandomized:p,currentQuestion:e,isAnswerRevealed:h,selectedAnswer:v,wrongCount:w(()=>s.value.size),getRandomQuestionId:a,updateCounters:q,revealAnswer:S,selectAnswer:Q,setQuestion:g,hasQuestion:z}});function b(t,s,l){const d=[...t.keys()],r=d.map(i=>l.has(i)?5:s.has(i)?1/(s.get(i)||1)**2:10);return D(d,r)}function D(t,s){if(t.length!==s.length)throw new Error("Длины массивов values и weights должны совпадать.");const l=t.length;if(l===0)throw new Error("Массив values не должен быть пустым.");const d=s.reduce((a,e)=>a+e,0);if(d===0)throw new Error("Сумма весов не должна быть равна 0.");const r=new Array(l);for(let a=0;a<l;a++)r[a]=s[a]/d*l;const i=new Array(l),u=[],o=[];for(let a=0;a<l;a++)r[a]<1?u.push(a):o.push(a);for(;u.length>0&&o.length>0;){const a=u.pop(),e=o.pop();i[a]=e,r[e]=r[e]+r[a]-1,r[e]<1?u.push(e):o.push(e)}for(;u.length>0;)r[u.pop()]=1;for(;o.length>0;)r[o.pop()]=1;const c=Math.floor(Math.random()*l);return Math.random()<r[c]?t[c]:t[i[c]]}export{H as a,J as u};
